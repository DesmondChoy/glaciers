plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
pot_dollar <- geography %>%
filter(!is.na(team_jersey_number),
!position == "GK",
value_eur > 0) %>%
mutate(pot_per_dollar = potential / value_eur) %>%
arrange(desc(pot_per_dollar)) %>%
select(long_name, pot_per_dollar) %>%
slice(1:100)
juice(pca_prep) %>%
filter(long_name %in% pot_dollar$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000, "k", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
vjust = "inward",
hjust = "outward",
size = 4,
fontface = "bold"
) +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Soccer Players (ex GKs) With The Highest Potential Per Value Dollar",
subtitle = "Note: x-axis has shifted significantly from the previous chart, with PC1 indicating a selection bias towards players with defensive traits.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
pot_dollar <- geography %>%
filter(!is.na(team_jersey_number),
!position == "GK",
value_eur > 0) %>%
mutate(pot_per_dollar = potential / value_eur) %>%
arrange(desc(pot_per_dollar)) %>%
select(long_name, pot_per_dollar) %>%
slice(1:100)
juice(pca_prep) %>%
filter(long_name %in% pot_dollar$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000, "k", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
vjust = "inward",
hjust = "inward",
size = 4,
fontface = "bold"
) +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Soccer Players (ex GKs) With The Highest Potential Per Value Dollar",
subtitle = "Note: x-axis has shifted significantly from the previous chart, with PC1 indicating a selection bias towards players with defensive traits.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
juice(pca_prep) %>%
filter(long_name %in% pot_dollar$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000, "k", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
size = 4,
fontface = "bold"
) +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Soccer Players (ex GKs) With The Highest Potential Per Value Dollar",
subtitle = "Note: x-axis has shifted significantly from the previous chart, with PC1 indicating a selection bias towards players with defensive traits.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
juice(pca_prep) %>%
filter(long_name %in% pot_dollar$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000, "k", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
hjust = "inward",
size = 4,
fontface = "bold"
) +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Soccer Players (ex GKs) With The Highest Potential Per Value Dollar",
subtitle = "Note: x-axis has shifted significantly from the previous chart, with PC1 indicating a selection bias towards players with defensive traits.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
juice(pca_prep) %>%
filter(long_name %in% valuable$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000000, "m", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
hjust = "inward",
size = 4,
fontface = "bold") +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
scale_x_continuous() +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Most Valuable Soccer Players (ex GKs) Mapped Against PC1 and PC3",
subtitle = "Offensive midfielders/playmakers are towards the left, defenders are mapped towards the right,\nStrikers can be found towards the top, while defensive roles with high movement scores are towards the bottom.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
?geom_text
juice(pca_prep) %>%
filter(long_name %in% valuable$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000000, "m", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
vjust = "top",
hjust = "inward",
size = 4,
fontface = "bold") +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
scale_x_continuous() +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Most Valuable Soccer Players (ex GKs) Mapped Against PC1 and PC3",
subtitle = "Offensive midfielders/playmakers are towards the left, defenders are mapped towards the right,\nStrikers can be found towards the top, while defensive roles with high movement scores are towards the bottom.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000000, "m", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
juice(pca_prep) %>%
filter(long_name %in% valuable$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000000, "m", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
vjust = "center",
hjust = "inward",
size = 4,
fontface = "bold") +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
scale_x_continuous() +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Most Valuable Soccer Players (ex GKs) Mapped Against PC1 and PC3",
subtitle = "Offensive midfielders/playmakers are towards the left, defenders are mapped towards the right,\nStrikers can be found towards the top, while defensive roles with high movement scores are towards the bottom.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
juice(pca_prep) %>%
filter(long_name %in% pot_dollar$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000, "k", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
vjust = "center",
hjust = "inward",
size = 4,
fontface = "bold"
) +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Soccer Players (ex GKs) With The Highest Potential Per Value Dollar",
subtitle = "Note: x-axis has shifted significantly from the previous chart, with PC1 indicating a selection bias towards players with defensive traits.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
blogdown:::serve_site()
pot_dollar <- geography %>%
filter(!is.na(team_jersey_number),
!position == "GK",
value_eur > 0) %>%
mutate(pot_per_dollar = potential / value_eur) %>%
arrange(desc(pot_per_dollar)) %>%
select(long_name, pot_per_dollar) %>%
slice(1:100)
juice(pca_prep) %>%
filter(long_name %in% pot_dollar$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000, "k", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
hjust = "inward",
size = 4,
fontface = "bold"
) +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Soccer Players (ex GKs) With The Highest Potential Per Value Dollar",
subtitle = "Note: x-axis has shifted significantly from the previous chart, with PC1 indicating a selection bias towards players with defensive traits.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
#Getting our top 50 valuable players ex GKs
valuable <- geography %>%
filter(!is.na(team_jersey_number),
!position == "GK") %>%
arrange(desc(value_eur)) %>%
select(long_name) %>%
slice(1:100)
juice(pca_prep) %>%
filter(long_name %in% valuable$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000000, "m", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
vjust = "inward",
hjust = "inward",
size = 4,
fontface = "bold") +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
scale_x_continuous() +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Most Valuable Soccer Players (ex GKs) Mapped Against PC1 and PC3",
subtitle = "Offensive midfielders/playmakers are towards the left, defenders are mapped towards the right,\nStrikers can be found towards the top, while defensive roles with high movement scores are towards the bottom.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
?geom_text
blogdown:::serve_site()
juice(pca_prep) %>%
filter(long_name %in% pot_dollar$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000, "k", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
hjust = "center",
size = 4,
fontface = "bold"
) +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Soccer Players (ex GKs) With The Highest Potential Per Value Dollar",
subtitle = "Note: x-axis has shifted significantly from the previous chart, with PC1 indicating a selection bias towards players with defensive traits.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
juice(pca_prep) %>%
filter(long_name %in% pot_dollar$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000, "k", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
hjust = "center",
size = 4,
fontface = "bold"
) +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Soccer Players (ex GKs) With The Highest Potential Per Value Dollar",
subtitle = "Note: x-axis has shifted significantly from the previous chart, with PC1 indicating a selection bias towards players with defensive traits.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000, "k", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
juice(pca_prep) %>%
filter(long_name %in% pot_dollar$long_name) %>%
left_join(geography %>% select(sofifa_id, position)) %>%
ggplot(aes(PC1, PC3, label = paste(
short_name, " ", "(", str_wrap(club, width = 20), ")", "\n", "EUR", value_eur/1000, "k", sep = ""))) +
geom_point(aes(color = position), alpha = 0.75, size = 5) +
geom_text(
check_overlap = TRUE,
hjust = "left",
size = 4,
fontface = "bold"
) +
scale_colour_fish_d(option = "Hypsypops_rubicundus") +
labs(
x = "PC1",
y = "PC3",
color = "Position",
title = "FIFA 20: Top 100 Soccer Players (ex GKs) With The Highest Potential Per Value Dollar",
subtitle = "Note: x-axis has shifted significantly from the previous chart, with PC1 indicating a selection bias towards players with defensive traits.",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
legend.title = element_text(face = "bold"),
legend.position = "top"
)
blogdown:::serve_site()
geography %>%
filter(str_detect(short_name, "T. French|Y. Fujita|A. Bennett|J. McCombe")) %>%
select(
short_name, club, player_positions, position,
overall:potential, pace:physic,attacking_crossing:defending_sliding_tackle
) %>%
pivot_longer(
c(overall:potential, pace:physic, attacking_crossing:defending_sliding_tackle),
names_to = "traits",
values_to = "scores"
)
geography %>%
filter(str_detect(short_name, "T. French|Y. Fujita|A. Bennett|J. McCombe")) %>%
select(
short_name, club, player_positions, position,
overall:potential, pace:physic,attacking_crossing:defending_sliding_tackle
) %>%
pivot_longer(
c(overall:potential, pace:physic, attacking_crossing:defending_sliding_tackle),
names_to = "traits",
values_to = "scores"
) %>%
top_n(20, scores)
geography %>%
filter(str_detect(short_name, "T. French|Y. Fujita|A. Bennett|J. McCombe")) %>%
select(
short_name, club, player_positions, position,
overall:potential, pace:physic,attacking_crossing:defending_sliding_tackle
) %>%
pivot_longer(
c(overall:potential, pace:physic, attacking_crossing:defending_sliding_tackle),
names_to = "traits",
values_to = "scores"
) %>%
group_by(short_name) %>%
top_n(20, scores)
geography %>%
filter(str_detect(short_name, "T. French|Y. Fujita|A. Bennett|J. McCombe")) %>%
select(
short_name, club, player_positions, position,
overall:potential, pace:physic,attacking_crossing:defending_sliding_tackle
) %>%
pivot_longer(
c(overall:potential, pace:physic, attacking_crossing:defending_sliding_tackle),
names_to = "traits",
values_to = "scores"
) %>%
group_by(short_name) %>%
top_n(20, scores) %>%
ungroup() %>%
ggplot(aes(reorder_within(traits, scores, short_name), scores)) +
geom_col(aes(fill = short_name), show.legend = F) +
gghighlight(traits %in% PC2$terms, calculate_per_facet = T) +
coord_flip() +
facet_wrap(~ short_name, scales = "free_y") +
scale_x_reordered() +
scale_fill_fish_d(option = "Antennarius_commerson") +
labs(
x = "Traits",
y = "Scores",
title = "How Does PC2 Components Map Onto These Four Defenders' Top Traits?",
subtitle = "Not surprisingly, the top PC2 components are featured strongly across all four players' traits",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 15),
)
library(gghighlight)
PC2 <- tidied_pca %>%
filter(component == "PC2") %>%
top_n(15, abs(value))
geography %>%
filter(str_detect(short_name, "T. French|Y. Fujita|A. Bennett|J. McCombe")) %>%
select(
short_name, club, player_positions, position,
overall:potential, pace:physic,attacking_crossing:defending_sliding_tackle
) %>%
pivot_longer(
c(overall:potential, pace:physic, attacking_crossing:defending_sliding_tackle),
names_to = "traits",
values_to = "scores"
) %>%
group_by(short_name) %>%
top_n(20, scores) %>%
ungroup() %>%
ggplot(aes(reorder_within(traits, scores, short_name), scores)) +
geom_col(aes(fill = short_name), show.legend = F) +
gghighlight(traits %in% PC2$terms, calculate_per_facet = T) +
coord_flip() +
facet_wrap(~ short_name, scales = "free_y") +
scale_x_reordered() +
scale_fill_fish_d(option = "Antennarius_commerson") +
labs(
x = "Traits",
y = "Scores",
title = "How Does PC2 Components Map Onto These Four Defenders' Top Traits?",
subtitle = "Not surprisingly, the top PC2 components are featured strongly across all four players' traits",
caption = "Source: FIFA 20 Complete Player Data Set"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 15),
)
blogdown:::serve_site()
