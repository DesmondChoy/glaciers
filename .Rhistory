blogdown:::serve_site()
library(blogdown)
serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
set_wd <- function() {
library(rstudioapi)
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
}
setwd
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.width = 15,
fig.height = 12)
knitr::include_graphics("/img/data-science.png")
setwd
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.width = 15,
fig.height = 12)
knitr::include_graphics("/img/data-science.png")
knitr::include_graphics("/static/img/data-science.png")
getwd()
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.width = 15,
fig.height = 12)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.width = 15,
fig.height = 12)
getwd()
knitr::include_graphics("/data-science.png")
knitr::include_graphics("/img/data-science.png")
blogdown:::serve_site()
git add -A
blogdown:::serve_site()
file.edit('~/.Rprofile')
library(blogdown)
blogdown:::serve_site()
blogdown:::new_post_addin()
library(readxl) #data importing
library(tidyverse) #data wrangling
library(magrittr) #data wrangling
library(lubridate) #date manipulation
library(hrbrthemes) #ggplot themes
library(ggrepel) #ggplot identification of data points
Sectors <- read_xlsx("Sectors.xlsx", na = "NA")
Sectors <- Sectors[-c(1:3),]
Periods <- read_xlsx("Periods.xlsx", na = "NA")
Periods <- Periods[-c(1:3),]
Energy <- left_join(Sectors, Periods)
Energy <- distinct(Energy, CUSIP, .keep_all = TRUE)
names(Energy) <- tolower(gsub("\\s", "\\.", names(Energy)))
Energy$bloomberg.composite.rating <-
as_factor(Energy$bloomberg.composite.rating) %>%
factor(levels = c("AA+", "AA", "AA-", "A+", "A", "A-", "BBB+", "BBB", "BBB-", "BB+", "NR"))
Energy$ticker <- str_extract(Energy$security, "^\\w+")
Energy$year <- str_extract(Energy$security, "\\d\\d$")
Energy$coupon <- str_extract(Energy$security, "\\s.+\\s")
Energy$maturity <- as.numeric((mdy(str_extract(Energy$security, "\\d+/.+$")) - today())/365)
Energy$`moody's.rating` <- as_factor(Energy$`moody's.rating`)
Energy$`s&p.rating` <- as_factor(Energy$`s&p.rating`)
Energy$crncy <- as_factor(Energy$crncy)
Energy$bclass.level.4.classification.name <-
as_factor(Energy$bclass.level.4.classification.name) %>%
factor(
levels = c(
"Integrated",
"Independent",
"Midstream",
"Refining",
"Oil Field Services",
"Government Owned, No Guarantee"
)
Energy <- Energy %>%
filter(!ticker %in% c("PAA", "BHI", "SLB", "HAL"))
#Fixing "Govt" sectors, TOPTB/VLO, and STOAU
Energy$bclass.level.4.classification.name[Energy$ticker %in% c("SINOPE", "CNPCCH", "PETMK", "PTTTB")] <- "Integrated"
Energy$bclass.level.4.classification.name[Energy$ticker %in% c("CNOOC", "STOAU")] <- "Independent"
Energy$bclass.level.4.classification.name[Energy$ticker == "TOPTB"] <-
"Refining"
Energy$bclass.level.4.classification.name[Energy$ticker == "VLO"] <-
"Refining"
Energy$bloomberg.composite.rating[Energy$ticker == "STOAU"] <- "BBB-"
US <- c("CVX", "XOM", "CNQCN", "COP", "MRO", "OXY", "ENBCN", "KMI", "ETP", "MPC", "OKE")
EU <- c("BPLN", "ENIIM", "RDSALN", "TOTAL")
Asia <- c("CNOOC", "CNPCCH", "PETMK", "PTTEPT", "PTTTB", "SINOPE", "TOPTB")
AU <- c("STOAU", "WPLAU", "APAAU")
Energy$region <- if_else(Energy$ticker %in% US, "US",
if_else(Energy$ticker %in% EU,"EU",
if_else(Energy$ticker %in% Asia, "Asia",
"AU")))
Spreads <- Energy %>%
group_by(bclass.level.4.classification.name,
bloomberg.composite.rating,
ticker,
region) %>%
summarise(n = n()) %>%
select(ticker,
bclass.level.4.classification.name,
bloomberg.composite.rating,
region,
n)
#Wrangling: Credit Metrics
Metrics <-
excel_sheets("Credit Metrics.xlsx") %>%
map(
~ read_xlsx(
"Credit Metrics.xlsx",
.,
range = "L1:S27",
na = "#N/A N/A"
)
for (i in seq(Metrics)) {
Metrics[[i]][,2] <- NULL
}
colname <-
c("ticker", "2014", "2015", "2016", "2017", "2018", "Jun 2019")
header <-
c("Leverage", "Net.leverage", "Gearing", "Capex.to.sales", "CFO",
"Capex", "Dvd", "ShareRep", "RCF.net.debt", "Int.cov")
Metrics <- map(Metrics, setNames, colname)
#This next part of code is extremely unelegant and messy... but it gets the job done
Metrics <- map2_dfc(Metrics, header,
~ pivot_longer(.x, -ticker, names_to = "Period", values_to = .y)) %>%
select(c(1:3, 6, 9, 12, 15, 18, 21, 24, 27, 30))
Metrics <- inner_join(Metrics, Spreads)
names(Metrics) <- tolower(gsub("\\s", "\\.", names(Metrics)))
Rating <- c("AA+", "AA", "AA-", "A+", "A", "A-", "BBB+", "BBB", "BBB-")
Energy <- Energy %>%
filter(
crncy == "USD" &
bloomberg.composite.rating %in% Rating &
coupon.type == "FIXED")
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.width = 15,
fig.height = 12)
Metrics
Spreads <- Energy %>%
group_by(bclass.level.4.classification.name,
bloomberg.composite.rating,
ticker,
region) %>%
summarise(n = n()) %>%
select(ticker,
bclass.level.4.classification.name,
bloomberg.composite.rating,
region,
n)
#Wrangling: Credit Metrics
Metrics <-
excel_sheets("Credit Metrics.xlsx") %>%
map(
~ read_xlsx(
"Credit Metrics.xlsx",
.,
range = "L1:S27",
na = "#N/A N/A"
)
for (i in seq(Metrics)) {
Metrics[[i]][,2] <- NULL
}
colname <-
c("ticker", "2014", "2015", "2016", "2017", "2018", "Jun 2019")
header <-
c("Leverage", "Net.leverage", "Gearing", "Capex.to.sales", "CFO",
"Capex", "Dvd", "ShareRep", "RCF.net.debt", "Int.cov")
Metrics <- map(Metrics, setNames, colname)
#This next part of code is extremely unelegant and messy... but it gets the job done
Metrics <- map2_dfc(Metrics, header,
~ pivot_longer(.x, -ticker, names_to = "Period", values_to = .y)) %>%
select(c(1:3, 6, 9, 12, 15, 18, 21, 24, 27, 30))
Metrics <- inner_join(Metrics, Spreads)
names(Metrics) <- tolower(gsub("\\s", "\\.", names(Metrics)))
Energy %>%
filter(maturity <= 20) %>%
mutate(bucket = if_else(
bloomberg.composite.rating %in% c("BBB+", "BBB", "BBB-"), "BBB+ to BBB-", "A- & Higher"),
label = paste(ticker, coupon, year, sep = " "),
curve =  cut(maturity, breaks = seq(0, 20, 5))) %>%
ggplot(aes(maturity, `1y.chg`)) +
geom_point(
aes(shape = bclass.level.4.classification.name, color = bclass.level.4.classification.name),
size = 2) +
geom_text_repel(data = . %>%
group_by(bucket, curve) %>%
mutate(percentile = `1y.chg` <= quantile(`1y.chg`, 0.025, na.rm = TRUE) |
`1y.chg` >= quantile(`1y.chg`, 0.975, na.rm = TRUE)) %>%
filter(percentile == 1),
aes(label = label), box.padding = 0.5, size = 4) +
facet_wrap(. ~ bucket) +
xlab("Years to Maturity") +
ylab("Spread") +
ylim(-100, 100) +
scale_color_manual(values = c("#23576E", "#099FDB", "#29B00E", "#208F84", "#F55840", "#924F3E")) +
ggtitle("Spread Movements (Nov 2018 - Nov 2019)", "Bonds Highlighted Have Experienced The Most Widening/Tightening") +
theme_ipsum() +
theme(plot.title = element_text(face = "bold", size = 30), plot.subtitle = element_text(size = 20),
strip.background = element_blank(), strip.text = element_text(face = "bold", size = 20),
legend.position = "bottom", legend.title = element_blank(),
legend.box = "horizontal", legend.text = element_text(size = 20)) +
guides(col = guide_legend(nrow = 1))
blogdown:::serve_site()
Energy %>%
filter(maturity <= 20) %>%
mutate(bucket = if_else(
bloomberg.composite.rating %in% c("BBB+", "BBB", "BBB-"), "BBB+ to BBB-", "A- & Higher"),
label = paste(ticker, coupon, year, sep = " "),
curve =  cut(maturity, breaks = seq(0, 20, 5))) %>%
ggplot(aes(maturity, `1y.chg`)) +
geom_point(
aes(shape = bclass.level.4.classification.name, color = bclass.level.4.classification.name),
size = 2) +
geom_text_repel(data = . %>%
group_by(bucket, curve) %>%
mutate(percentile = `1y.chg` <= quantile(`1y.chg`, 0.025, na.rm = TRUE) |
`1y.chg` >= quantile(`1y.chg`, 0.975, na.rm = TRUE)) %>%
filter(percentile == 1),
aes(label = label), box.padding = 0.5, size = 4) +
facet_wrap(. ~ bucket) +
xlab("Years to Maturity") +
ylab("Spread") +
ylim(-100, 100) +
scale_color_manual(values = c("#23576E", "#099FDB", "#29B00E", "#208F84", "#F55840", "#924F3E")) +
ggtitle("Spread Movements (Nov 2018 - Nov 2019)", "Bonds Highlighted Have Experienced The Most Widening/Tightening") +
theme_ipsum() +
theme(plot.title = element_text(face = "bold", size = 30), plot.subtitle = element_text(size = 20),
strip.background = element_blank(), strip.text = element_text(face = "bold", size = 20),
legend.position = "bottom", legend.title = element_blank(),
legend.box = "horizontal", legend.text = element_text(size = 20)) +
guides(col = guide_legend(nrow = 1))
blogdown:::serve_site()
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.width = 15,
fig.height = 12)
library(tidyverse)
library(lubridate)
library(hrbrthemes)
library(tidytext)
spotify_songs <-
read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-21/spotify_songs.csv')
skimr::skim(spotify_songs)
spotify <- spotify_songs %>%
distinct(track_name, track_artist, .keep_all = TRUE) %>%
mutate(year = str_extract(track_album_release_date, "^\\d..."))
spotify$decades <- cut(
as.numeric(spotify$year),
c(1956, 1960, 1970, 1980, 1990, 2000, 2010, 2021),
labels = c("50s", "60s", "70s", "80s", "90s", "2000s", "2010s")
)
spotify %>%
group_by(decades, playlist_subgenre) %>%
add_count(playlist_subgenre) %>%
filter(n > 5) %>%
ggplot(aes(
reorder_within(playlist_subgenre, track_popularity, decades),
track_popularity
)) +
geom_boxplot(aes(fill = playlist_genre)) +
coord_flip() +
facet_wrap(decades ~ ., nrow = 2, scales = "free_y") +
scale_x_reordered() +
theme_ipsum() +
labs(
title = "Popularity of Genres Through The Decades",
subtitle = "Recent Decades Saw An Explosion of Music Genres - Led by Rock and R&B",
caption = "\n Source: TidyTuesday
Visualization: Desmond Choy (Twitter @Norest)",
fill = "Music Genres",
x = "Music Sub-Genres",
y = "Track Popularity"
) +
theme(
plot.title = element_text(face = "bold", size = 25),
plot.subtitle = element_text(size = 15),
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 15),
legend.position = "top",
legend.title = element_text("Music Genres"),
legend.box = "horizontal",
legend.text = element_text(size = 10)
) +
guides(row = guide_legend(nrow = 1))
spotify %>%
filter(playlist_subgenre == "permanent wave") %>%
count(track_artist, sort = TRUE)
spotify %>%
select(playlist_genre, playlist_subgenre, track_name, danceability) %>%
filter(playlist_genre == "edm") %>%
distinct(track_name, .keep_all = TRUE) %>%
group_by(playlist_subgenre) %>%
top_n(n = 20, wt = danceability) %>%
ggplot(aes(reorder_within(track_name, danceability, playlist_subgenre), danceability)) +
geom_point(aes(colour = playlist_subgenre), size = 3, show.legend = FALSE) +
coord_flip() +
facet_wrap(. ~ playlist_subgenre, nrow = 2, scales = "free_y") +
scale_x_reordered() +
theme_ipsum() +
labs(
title = "What are some of the most danceable EDM tracks?",
subtitle = "Danceability describes how suitable a track is for dancing based on a combination of musical elements\nA value of 0.0 is least danceable and 1.0 is most danceable.",
caption = "\n Source: TidyTuesday
Visualization: Desmond Choy (Twitter @Norest)",
fill = "Music Genres",
x = "Album Name",
y = "Danceability"
) +
theme(
plot.title = element_text(face = "bold", size = 25),
plot.subtitle = element_text(size = 15),
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 15),
legend.position = "top",
legend.title = element_text("Music Genres"),
legend.box = "horizontal",
legend.text = element_text(size = 10)
) +
guides(row = guide_legend(nrow = 1))
spotify %>%
mutate(criteria = instrumentalness + acousticness + valence) %>%
select(playlist_genre, playlist_subgenre, track_album_name, criteria) %>%
distinct(track_album_name, .keep_all = TRUE) %>%
group_by(playlist_subgenre) %>%
summarise(criteria = sum(criteria)/n()) %>%
arrange(desc(criteria))
spotify %>%
mutate(criteria = instrumentalness + acousticness + valence) %>%
select(playlist_genre, playlist_subgenre, track_artist, track_album_name, criteria) %>%
distinct(track_album_name, .keep_all = TRUE) %>%
filter(playlist_subgenre == "hip hop") %>%
arrange(desc(criteria)) %>%
head(20)
spotify %>%
mutate(criteria = instrumentalness + acousticness + valence) %>%
select(playlist_genre, playlist_subgenre, track_artist, track_album_name, criteria) %>%
distinct(track_album_name, .keep_all = TRUE) %>%
arrange(desc(criteria)) %>%
head(20)
blogdown:::serve_site()
