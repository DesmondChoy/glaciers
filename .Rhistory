#map page number
imap(., ~.x %>% mutate(page = .y)) %>%
#combine all lists
reduce(bind_rows) %>%
select(page, text) %>%
#convert it to one-sentence-per-row
unnest_tokens(sentence, text,
token = "sentences",
to_lower = FALSE) %>%
#convert bullet points to standalone sentence
unnest_tokens(sentence, sentence,
token = "regex",
to_lower = FALSE,
pattern = "\\.|\\:|\\u00B7|\\u2022") %>%
mutate(party = "PAP") %>%
select(sentence, page, party)
psp_df <- pdf_data("psp.pdf") %>%
imap(., ~.x %>% mutate(page = .y)) %>%
reduce(bind_rows) %>%
select(page, text) %>%
unnest_tokens(sentence, text,
token = "sentences",
to_lower = FALSE) %>%
unnest_tokens(sentence, sentence,
token = "regex",
to_lower = FALSE,
pattern = "\\.|\\:|\\u00B7|\\u2022") %>%
mutate(party = "PSP") %>%
select(sentence, page, party)
rdu_df <- pdf_data("rdu.pdf") %>%
imap(., ~.x %>% mutate(page = .y)) %>%
reduce(bind_rows) %>%
select(page, text) %>%
unnest_tokens(sentence, text,
token = "sentences",
to_lower = FALSE) %>%
unnest_tokens(sentence, sentence,
token = "regex",
to_lower = FALSE,
pattern = "\\.|\\:|\\u00B7|\\u2022") %>%
mutate(party = "RDU") %>%
select(sentence, page, party)
# Chunk 8: sdp
sdp_df <- pdf_data("sdp.pdf") %>%
imap(., ~.x %>% mutate(page = .y)) %>%
reduce(bind_rows) %>%
select(page, text) %>%
unnest_tokens(sentence, text,
token = "sentences",
to_lower = FALSE) %>%
unnest_tokens(sentence, sentence,
token = "regex",
to_lower = FALSE,
pattern = "\\.|\\:|\\u00B7|\\u2022") %>%
mutate(party = "SDP") %>%
select(sentence, page, party)
# Chunk 9: combination
manifestos <- wp_df %>%
bind_rows(list(rp_df, spp_df, nsp_df, sda_df, ppp_df)) %>%
unnest_tokens(sentence, value,
token = "sentences",
to_lower = FALSE)
# Chunk 10
manif_df <- manifestos %>%
bind_rows(list(pap_df, sdp_df, psp_df, rdu_df))
manif_df
# Chunk 11: counting sentence
manif_df %>%
count(party, sort = TRUE)
manif_df
pap_df
pap_df %>%
mutate(length = str_count(sentence)) %>%
arrange(length)
pap_df %>%
mutate(length = str_count(sentence)) %>%
arrange(length) %>%
head()
pap_df %>%
mutate(length = str_count(sentence)) %>%
filter(length < 5)
pap_df %>%
mutate(length = str_count(sentence)) %>%
filter(length < 5) %>%
sample_n(5)
pap_df %>%
mutate(length = str_count(sentence)) %>%
filter(length < 5) %>%
sample_n(5)
pap_df %>%
mutate(length = str_count(sentence)) %>%
filter(length < 5) %>%
sample_n(5)
pap_df %>%
mutate(length = str_count(sentence)) %>%
filter(length < 5) %>%
sample_n(5)
pap_df %>%
mutate(length = str_count(sentence)) %>%
arrange(length)
pap_df %>%
mutate(length = str_count(sentence)) %>%
arrange(desc(length))
pap_df %>%
mutate(length = str_count(sentence)) %>%
arrange(length)
blogdown:::serve_site()
comp %>%
group_by(party) %>%
arrange(desc(percent)) %>%
slice(1:5) %>%
ungroup() %>%
mutate(topic = reorder_within(topic, percent, party)) %>%
ggplot(aes(percent, topic)) +
geom_col(aes(fill = party), show.legend = FALSE) +
geom_text(
data    = dat_text,
mapping = aes(
x = 70,
y = 1,
label = paste("\"", str_wrap(label, width = 30),
"\"", sep = "")
),
hjust   = "inward",
vjust   = "inward",
size = 3,
fontface = "bold"
) +
facet_wrap(~ party, scales = "free_y", nrow = 4) +
scale_y_reordered() +
scale_fill_fish_d(option = "Balistapus_undulatus") +
labs(
x = "Frequency Of Topic Cited Within Own Manifesto (%)",
y = "",
title = "Party Manifestos: Ranking Top Five Most Discussed Topics",
subtitle = "Social Mobility/Labour ranks as the most discussed topic across all parties,\nwith PPP/SDA putting significantly more emphasis.",
caption = "Quotes provided relate to their most discussed topic"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 15),
)
# Chunk 1: setup
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.width = 12,
fig.height = 10)
setwd("C:\\Users\\Desmond\\Documents\\GitHub\\glaciers\\content\\post")
# Chunk 2: libraries
library(tidyverse)
library(tidytext)
library(pdftools)
library(fishualize)
theme_set(theme_minimal())
# Chunk 3: wp
#1 page per row
wp_df <- pdf_text("wp.pdf") %>%
as_tibble() %>%
mutate(page = row_number(),
party = "WP")
# Chunk 4: check wp
wp_df %>%
slice(sample(1:length(page), 1)) %>%
select(page, value) %>%
unnest_tokens(sentence, value,
token = "sentences",
to_lower = FALSE) %>%
head()
# Chunk 5: rp spp nsp sda ppp
rp_df <- pdf_text("rp.pdf") %>%
as_tibble() %>%
mutate(page = row_number(),
party = "RP")
spp_df <- pdf_text("spp.pdf") %>%
as_tibble() %>%
mutate(page = row_number(),
party = "SPP")
nsp_df <- pdf_text("nsp.pdf") %>%
as_tibble() %>%
mutate(page = row_number(),
party = "NSP")
sda_df <- pdf_text("sda.pdf") %>%
as_tibble() %>%
mutate(page = row_number(),
party = "SDA")
ppp_df <- pdf_text("ppp.pdf") %>%
as_tibble() %>%
mutate(page = row_number(),
party = "PPP")
# Chunk 6: pap psp rdu
pap_df <- pdf_data("pap.pdf") %>%
#map page number
imap(., ~.x %>% mutate(page = .y)) %>%
#combine all lists
reduce(bind_rows) %>%
select(page, text) %>%
#convert it to one-sentence-per-row
unnest_tokens(sentence, text,
token = "sentences",
to_lower = FALSE) %>%
#convert bullet points to standalone sentence
unnest_tokens(sentence, sentence,
token = "regex",
to_lower = FALSE,
pattern = "\\.|\\:|\\u00B7|\\u2022") %>%
mutate(party = "PAP") %>%
select(sentence, page, party)
psp_df <- pdf_data("psp.pdf") %>%
imap(., ~.x %>% mutate(page = .y)) %>%
reduce(bind_rows) %>%
select(page, text) %>%
unnest_tokens(sentence, text,
token = "sentences",
to_lower = FALSE) %>%
unnest_tokens(sentence, sentence,
token = "regex",
to_lower = FALSE,
pattern = "\\.|\\:|\\u00B7|\\u2022") %>%
mutate(party = "PSP") %>%
select(sentence, page, party)
rdu_df <- pdf_data("rdu.pdf") %>%
imap(., ~.x %>% mutate(page = .y)) %>%
reduce(bind_rows) %>%
select(page, text) %>%
unnest_tokens(sentence, text,
token = "sentences",
to_lower = FALSE) %>%
unnest_tokens(sentence, sentence,
token = "regex",
to_lower = FALSE,
pattern = "\\.|\\:|\\u00B7|\\u2022") %>%
mutate(party = "RDU") %>%
select(sentence, page, party)
# Chunk 8: sdp
sdp_df <- pdf_data("sdp.pdf") %>%
imap(., ~.x %>% mutate(page = .y)) %>%
reduce(bind_rows) %>%
select(page, text) %>%
unnest_tokens(sentence, text,
token = "sentences",
to_lower = FALSE) %>%
unnest_tokens(sentence, sentence,
token = "regex",
to_lower = FALSE,
pattern = "\\.|\\:|\\u00B7|\\u2022") %>%
mutate(party = "SDP") %>%
select(sentence, page, party)
# Chunk 9: combination
manifestos <- wp_df %>%
bind_rows(list(rp_df, spp_df, nsp_df, sda_df, ppp_df)) %>%
unnest_tokens(sentence, value,
token = "sentences",
to_lower = FALSE)
# Chunk 10
manif_df <- manifestos %>%
bind_rows(list(pap_df, sdp_df, psp_df, rdu_df))
manif_df
# Chunk 11: counting sentence
manif_df %>%
count(party, sort = TRUE)
# Chunk 12
pap_df %>%
mutate(length = str_count(sentence)) %>%
arrange(length)
# Chunk 13: categories
categories <- manif_df %>%
#transform all sentences to lower case
mutate(lower = str_to_lower(sentence)) %>%
#removing content pages
filter(!str_detect(lower, "(?i)content")) %>%
mutate(topic = case_when(
str_detect(lower, "\\bgst\\b|\\btax\\b|poverty|\\bpoor\\b|assistance|senior|\\belder|silver|retire|subsidy|subsidies|\\bage\\b|\\baged\\b|disabled|disabilities|\\bchild|\\bcost of living\\b|\\bsocial") ~ "Social Mobility",
str_detect(lower, "employ|\\bjob.?\\b|\\bwage|\\bwork\\b|\\bworker\\b|skillsfuture|retrench|labour|salary|\\bpmet") ~ "Labour",
str_detect(lower, "\\beconom|\\bsme\\b|\\brent\\b|growth|enterprise|\\bgdp\\b|business|\\bindust") ~ "Economy",
str_detect(lower, "\\bhdb|\\bflat|housing|\\blease|\\brental|\\bsers\\b|bloc\\b|cpf|payout|withdraw") ~ "CPF/Housing",
str_detect(lower, "education|class size|\\bmoe\\b|student|school|learning|kindergarten|universit") ~ "Education",
str_detect(lower, "constituencies|parliament|government|\\belection|\\bminist|president|independen|\\bvot|transparen|democracy|isa|\\binternal security") ~ "Governance",
str_detect(lower, "healthcare|\\bchas\\b|polyclinic|hospital|\\bdrug|patient|medisave|medishield|\\bmedic|insurance") ~ "Healthcare",
str_detect(lower, "\\blibert|gender|freedom|pofma|\\brights|\\bdiversity|assembly") ~ "Civil Liberties",
str_detect(lower, "climate|\\benergy|\\bgreen|\\bcarbon|\\bsolar|renewable|emissions|electric|\\bparis\\b|pollution") ~ "Climate Change",
str_detect(lower, "covid.?\\d+?|post-covid|disease|outbreak|pandemic") ~ "Covid-19",
TRUE ~ "Others")
) %>%
select(party, topic, sentence, page)
set.seed(123)
categories %>%
filter(!topic == "Others") %>%
sample_n(3) %>%
t()
# Chunk 14: english nuance
categories %>%
filter(str_detect(sentence, "below the age of 37")) %>%
t()
# Chunk 15: others
categories %>%
count(topic, sort = TRUE)
# Chunk 16: histogram
categories %>%
filter(topic == "Others") %>%
#count the number of letters in each sentence
mutate(length = str_count(sentence)) %>%
ggplot(aes(length)) +
geom_histogram(
binwidth = 20,
fill = fish(1, option = "Cephalopholis_argus", alpha = 0.6, begin = 0.2)
) +
labs(
x = "Number of Letters In Each Sentence",
y = "Number of Sentences",
title = "Analysing Sentences Categorized as \"Others\"",
subtitle = "A significant amount of sentences within Others contains ten letters or less"
) +
theme(plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17))
# Chunk 17: quantile
library(skimr)
categories %>%
filter(topic == "Others") %>%
#count the number of letters in each sentence
mutate(length = str_count(sentence)) %>%
skim_without_charts(length)
# Chunk 18: others quantile
set.seed(2020)
categories %>%
filter(topic == "Others") %>%
mutate(length = str_count(sentence),
percentile = as.factor(case_when(length < 4 ~ "0-25",
between(length, 4, 50) ~ "26-50",
between(length, 51, 102) ~ "51-75",
TRUE ~ "76-100"))) %>%
group_by(percentile) %>%
sample_n(5) %>%
slice(1:5)
# Chunk 19: table
library(reactable)
library(htmltools)
library(crosstalk)
data <- SharedData$new(categories)
links <- categories %>%
distinct(party) %>%
mutate(
html = paste(
"https://github.com/DesmondChoy/DataSets/raw/master/",
str_to_lower(party), ".pdf", sep = "")
)
# Chunk 20: interactive
bscols(
widths = c(2, 10),
list(
filter_checkbox("type", "Topic", data, ~ topic),
filter_checkbox("type", "Party", data, ~ party)
),
reactable(
data,
defaultColDef = colDef(
headerStyle = list(background = fish(1, option = "Epinephelus_fasciatus"))
),
columns = list(
sentence = colDef(name = "Search Across Manifestos", align = "center",
minWidth = 175),
party = colDef(
name = "Party",
align = "center",
minWidth = 40,
filterable = FALSE,
html = TRUE,
cell = function(value, index) {
sprintf('<a href="%s" target="_blank">%s</a>', links$html[index], value)
}
),
page = colDef(name = "Page", align = "center", minWidth = 40),
topic = colDef(name = "Topic", align = "center", filterable = FALSE)
),
showPageSizeOptions = TRUE,
pageSizeOptions = c(5, 10, 20),
defaultPageSize = 5,
filterable = TRUE,
minRows = 5,
borderless = TRUE,
highlight = TRUE,
striped = TRUE,
paginationType = "simple",
theme = reactableTheme(
borderColor = "#dfe2e5",
stripedColor = "#f6f8fa",
highlightColor = "#f0f5f9",
cellPadding = "8px 12px",
style = list(fontFamily = "BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif"),
searchInputStyle = list(width = "100%")
)
# Chunk 21: comparing across topic
library(gghighlight)
comp <- categories %>%
filter(!topic == "Others") %>%
group_by(party) %>%
count(topic) %>%
mutate(percent = round(n / sum(n) * 100, 1)) %>%
ungroup()
comp %>%
mutate(party = reorder_within(party, percent, topic)) %>%
ggplot(aes(party, percent)) +
geom_col(fill = fish(1, option = "Hypsypops_rubicundus"), show.legend = FALSE) +
gghighlight(str_detect(party, "PAP"), calculate_per_facet = T) +
coord_flip() +
scale_x_reordered() +
facet_wrap(~ topic, nrow = 4, scales = "free_y") +
labs(
x = "Political Party",
y = "Frequency Of Topic Cited Within Own Manifesto (%)",
title = "How Does PAP's Manifesto Compare Against The Opposition Across Each Topic?",
subtitle = "In absolute terms, PAP's manifesto focuses on addressing labour and social mobility issues.\nCovid-19 was the issue PAP spent most time discussing, relatively speaking."
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 15),
)
most_discussed <- comp %>%
group_by(party) %>%
arrange(desc(percent)) %>%
slice(1) %>%
select(party, topic)
set.seed(2021)
quote <- categories %>%
right_join(most_discussed) %>%
mutate(length = str_count(sentence)) %>%
filter(between(length, 75, 175)) %>%
group_by(party) %>%
slice_sample() %>%
select(party, sentence)
dat_text <- data.frame(party = quote$party,
label = quote$sentence)
comp %>%
group_by(party) %>%
arrange(desc(percent)) %>%
slice(1:5) %>%
ungroup() %>%
mutate(topic = reorder_within(topic, percent, party)) %>%
ggplot(aes(percent, topic)) +
geom_col(aes(fill = party), show.legend = FALSE) +
geom_text(
data    = dat_text,
mapping = aes(
x = 70,
y = 1,
label = paste("\"", str_wrap(label, width = 30),
"\"", sep = "")
),
hjust   = "inward",
vjust   = "inward",
size = 3,
fontface = "bold"
) +
facet_wrap(~ party, scales = "free_y", nrow = 4) +
scale_y_reordered() +
scale_fill_fish_d(option = "Balistapus_undulatus") +
labs(
x = "Frequency Of Topic Cited Within Own Manifesto (%)",
y = "",
title = "Party Manifestos: Ranking Top Five Most Discussed Topics",
subtitle = "Social Mobility/Labour ranks as the most discussed topic across all parties,\nwith PPP/SDA putting significantly more emphasis.",
caption = "Quotes provided relate to their most discussed topic"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 15),
)
comp %>%
group_by(party) %>%
arrange(desc(percent)) %>%
slice(1:5) %>%
ungroup() %>%
mutate(topic = reorder_within(topic, percent, party)) %>%
ggplot(aes(percent, topic)) +
geom_col(aes(fill = party), show.legend = FALSE) +
geom_text(
data    = dat_text,
mapping = aes(
x = 70,
y = 1,
label = paste("\"", str_wrap(label, width = 30),
"\"", sep = "")
),
hjust   = "inward",
vjust   = "inward",
size = 3,
fontface = "bold"
) +
facet_wrap(~ party, scales = "free_y", nrow = 4) +
scale_y_reordered() +
scale_fill_fish_d(option = "Balistapus_undulatus") +
labs(
x = "Frequency Of Topic Cited Within Own Manifesto (%)",
y = "",
title = "Party Manifestos: Ranking Top Five Most Discussed Topics",
subtitle = "Social Mobility/Labour ranks as the most discussed topic across all parties,\nwith PPP/SDA putting significantly more emphasis.\nQuotes provided relate to most discussed topic"
) +
theme(
plot.title = element_text(face = "bold", size = 20),
plot.subtitle = element_text(size = 17),
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 15),
)
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
